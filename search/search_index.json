{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#installation","title":"Installation","text":"pip install jsfInstalled"},{"location":"#usage","title":"Usage","text":""},{"location":"#from-your-python-program","title":"From your Python program","text":"<pre><code>from jsf import JSF\n\nfaker = JSF.from_json(\"demo-schema.json\")\nfake_json = faker.generate()\n</code></pre>"},{"location":"#from-the-command-line","title":"From the command line","text":""},{"location":"#system-installation","title":"System installation","text":"<p>First, you'll need to install <code>jsf[cli]</code> as it has the additional dependencies for the command line tools.</p> pip install jsf[cli]Installed <p>Now the cli is installed, all you will need to do is supply the JSON schema and the file path you wish to save the output to.</p> <pre><code>jsf --schema jsf/tests/data/custom.json --instance wow.json\n</code></pre>"},{"location":"#docker","title":"Docker","text":"<p>For convenience, you can also make use of the Docker image that is provided so there is no need to rely on package management.</p> <pre><code>docker build . -t challisa/jsf\ndocker run -v $PWD:/data challisa/jsf jsf --schema /data/jsf/tests/data/custom.json --instance /data/wow.json\n</code></pre>"},{"location":"features/","title":"jsf Features","text":"<p>jsf gives you the following:</p>"},{"location":"features/#based-on-open-standards","title":"Based on open standards","text":"<ul> <li>Provides out of the box data generation from any JSON schema \ud83d\udce6</li> <li>In memory conversion from JSON Schema to Pydantic Models with generated examples \ud83e\udd2f</li> <li>Inbuilt validation of fake JSON produced against the JSON schema \u2705</li> </ul>"},{"location":"features/#ability-to-extend-the-standard-to-maximize-realness-of-the-fake-data","title":"Ability to extend the standard to maximize realness of the fake data","text":"<ul> <li>Extendable custom data providers using any lambda functions \ud83d\udd17</li> <li>Multi level state for dependant data (eg multiple objects sharing value, such as children with same surname) \ud83e\udd13</li> </ul>"},{"location":"features/#plug-and-play","title":"Plug and play","text":"<ul> <li>Seamless integration with FastAPI, check out the demo code \ud83d\ude80</li> <li>Standardize on JSON schema and output to any file format, check out the demo code \ud83d\udce6</li> </ul>"},{"location":"intro-to-json-schema/","title":"JSON Schema Intro","text":""},{"location":"intro-to-json-schema/#coming-soon","title":"Coming soon ...","text":""},{"location":"about/about/","title":"About","text":"<p>About JSF, its design, inspiration and more. \ud83e\udd13</p>"},{"location":"about/alternatives/","title":"Alternatives, Inspiration and Comparisons","text":""},{"location":"about/alternatives/#coming-soon","title":"Coming soon ...","text":""},{"location":"about/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"about/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"about/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"about/code-of-conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"about/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"about/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at pawamoy@pm.me. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"about/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at http://contributor-covenant.org/version/1/4</p>"},{"location":"help/","title":"Help","text":"<p>Help and get help, contribute, get involved. \ud83e\udd1d</p>"},{"location":"help/contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p>"},{"location":"help/contributing/#environment-setup","title":"Environment setup","text":"<p>Nothing easier!</p> <p>Fork and clone the repository, then install <code>pants</code></p> <pre><code># Install `pants` on macos\nbrew install pantsbuild/tap/pants\n\n# Export the virtual environment for IDE\npants export --py-resolve-format=symlinked_immutable_virtualenv --resolve=python-default\n</code></pre> <p>That's it!</p> <p>You now have the dependencies installed.</p>"},{"location":"help/contributing/#development","title":"Development","text":"<p>As usual:</p> <ol> <li>create a new branch: <code>git checkout -b feature-or-bugfix-name</code></li> <li>edit the code and/or the documentation</li> </ol> <p>Before committing:</p> <ol> <li>Ensure to run <code>pants fmt ::</code> from the root directory to format all of the code in the repo before PR submission.</li> <li>Follow our commit message convention</li> </ol> <p>If you are unsure about how to fix or ignore a warning, just let the continuous integration fail, and we will help you during review.</p> <p>Don't bother updating the changelog, we will take care of this.</p>"},{"location":"help/contributing/#commit-message-convention","title":"Commit message convention","text":"<p>Commits messages must follow the Angular style:</p> <pre><code>&lt;type&gt;[(scope)]: Subject\n\n[Body]\n</code></pre> <p>Scope and body are optional. Type can be:</p> <ul> <li><code>build</code>: About packaging, building wheels, etc.</li> <li><code>chore</code>: About packaging or repo/files management.</li> <li><code>ci</code>: About Continuous Integration.</li> <li><code>docs</code>: About documentation.</li> <li><code>feat</code>: New feature.</li> <li><code>fix</code>: Bug fix.</li> <li><code>perf</code>: About performance.</li> <li><code>refactor</code>: Changes which are not features nor bug fixes.</li> <li><code>style</code>: A change in code style/format.</li> <li><code>tests</code>: About tests.</li> </ul> <p>Subject (and body) must be valid Markdown. If you write a body, please add issues references at the end:</p> <pre><code>Body.\n\nReferences: #10, #11.\nFixes #15.\n</code></pre>"},{"location":"help/get-help/","title":"Get Help","text":""},{"location":"help/get-help/#coming-soon","title":"Coming soon ...","text":""},{"location":"user-guide/advanced/","title":"Advanced User Guide","text":""},{"location":"user-guide/advanced/#coming-soon","title":"Coming soon ...","text":""},{"location":"user-guide/first-steps/","title":"Tutorial - User Guide","text":""},{"location":"user-guide/first-steps/#coming-soon","title":"Coming soon ...","text":""}]}